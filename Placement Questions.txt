/* 
1. WAVE ARRAY
sample input: 0,2,5,10
sample output:2,0,10,5
*/

#include <iostream>
#include <sstream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    string input;
    cout << "Enter numbers separated by commas: ";
    getline(cin, input);

    vector<int> numbers;
    stringstream ss(input);
    string token;
    while (getline(ss, token, ',')) {
        numbers.push_back(stoi(token));
    }

   
    if (numbers.size() >= 2) {
        swap(numbers[0], numbers[1]); // Swap first two elements
        swap(numbers[2], numbers[3]); // Swap last two elements
    }

    
    cout << "Output: ";
    for (int i = 0; i < numbers.size(); ++i) {
        cout << numbers[i];
        if (i != numbers.size() - 1) {
            cout << ",";
        }
    }
    cout << endl;

    return 0;
}


/*
2. MOVE ZERO TO RIGHT

sample input : 12,0,13,0,15
sample output : 12,13,15,0,10

*/

#include <iostream>
using namespace std;

void moveZerosToRight(int arr[], int n) {
    int count = 0; // Count of non-zero elements

    
    for (int i = 0; i < n; i++) {
        if (arr[i] != 0) {
            arr[count++] = arr[i];
        }
    }

   
    while (count < n) {
        arr[count++] = 0;
    }
}

int main() {
    int arr[] = {12,0,13,0,15};
    int n = sizeof(arr) / sizeof(arr[0]);

    cout << "Original array: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    moveZerosToRight(arr, n);

    cout << "Array after moving zeros to the right: ";
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;

    return 0;
}


